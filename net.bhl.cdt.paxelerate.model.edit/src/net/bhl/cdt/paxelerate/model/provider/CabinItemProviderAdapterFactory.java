/**
 */
package net.bhl.cdt.paxelerate.model.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import net.bhl.cdt.paxelerate.model.util.CabinAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support
 * Viewers. The adapters generated by this factory convert EMF adapter
 * notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The
 * adapters also support Eclipse property sheets. Note that most of the adapters
 * are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * 
 * @generated
 */
public class CabinItemProviderAdapterFactory extends CabinAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this
	 * adapter factory. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement
	 * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by
	 * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	public CabinItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Cabin} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CabinItemProvider cabinItemProvider;

	/**
	 * This creates an adapter for a {@link net.bhl.cdt.paxelerate.model.Cabin}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCabinAdapter() {
		if (cabinItemProvider == null) {
			cabinItemProvider = new CabinItemProvider(this);
		}

		return cabinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Row} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RowItemProvider rowItemProvider;

	/**
	 * This creates an adapter for a {@link net.bhl.cdt.paxelerate.model.Row}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRowAdapter() {
		if (rowItemProvider == null) {
			rowItemProvider = new RowItemProvider(this);
		}

		return rowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.TravelClass} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TravelClassItemProvider travelClassItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.TravelClass}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTravelClassAdapter() {
		if (travelClassItemProvider == null) {
			travelClassItemProvider = new TravelClassItemProvider(this);
		}

		return travelClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.BusinessClass} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BusinessClassItemProvider businessClassItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.BusinessClass}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBusinessClassAdapter() {
		if (businessClassItemProvider == null) {
			businessClassItemProvider = new BusinessClassItemProvider(this);
		}

		return businessClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.FirstClass} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FirstClassItemProvider firstClassItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.FirstClass}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFirstClassAdapter() {
		if (firstClassItemProvider == null) {
			firstClassItemProvider = new FirstClassItemProvider(this);
		}

		return firstClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.EconomyClass} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EconomyClassItemProvider economyClassItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.EconomyClass}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEconomyClassAdapter() {
		if (economyClassItemProvider == null) {
			economyClassItemProvider = new EconomyClassItemProvider(this);
		}

		return economyClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.PremiumEconomyClass} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PremiumEconomyClassItemProvider premiumEconomyClassItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.PremiumEconomyClass}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPremiumEconomyClassAdapter() {
		if (premiumEconomyClassItemProvider == null) {
			premiumEconomyClassItemProvider = new PremiumEconomyClassItemProvider(this);
		}

		return premiumEconomyClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Door} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DoorItemProvider doorItemProvider;

	/**
	 * This creates an adapter for a {@link net.bhl.cdt.paxelerate.model.Door}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDoorAdapter() {
		if (doorItemProvider == null) {
			doorItemProvider = new DoorItemProvider(this);
		}

		return doorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Seat} instances. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SeatItemProvider seatItemProvider;

	/**
	 * This creates an adapter for a {@link net.bhl.cdt.paxelerate.model.Seat}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSeatAdapter() {
		if (seatItemProvider == null) {
			seatItemProvider = new SeatItemProvider(this);
		}

		return seatItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Passenger} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PassengerItemProvider passengerItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.Passenger}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPassengerAdapter() {
		if (passengerItemProvider == null) {
			passengerItemProvider = new PassengerItemProvider(this);
		}

		return passengerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.CrewMember} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CrewMemberItemProvider crewMemberItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.CrewMember}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCrewMemberAdapter() {
		if (crewMemberItemProvider == null) {
			crewMemberItemProvider = new CrewMemberItemProvider(this);
		}

		return crewMemberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Lavatory} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LavatoryItemProvider lavatoryItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.Lavatory}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLavatoryAdapter() {
		if (lavatoryItemProvider == null) {
			lavatoryItemProvider = new LavatoryItemProvider(this);
		}

		return lavatoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Galley} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected GalleyItemProvider galleyItemProvider;

	/**
	 * This creates an adapter for a {@link net.bhl.cdt.paxelerate.model.Galley}
	 * . <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createGalleyAdapter() {
		if (galleyItemProvider == null) {
			galleyItemProvider = new GalleyItemProvider(this);
		}

		return galleyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Stairway} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StairwayItemProvider stairwayItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.Stairway}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStairwayAdapter() {
		if (stairwayItemProvider == null) {
			stairwayItemProvider = new StairwayItemProvider(this);
		}

		return stairwayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Curtain} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CurtainItemProvider curtainItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.Curtain}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCurtainAdapter() {
		if (curtainItemProvider == null) {
			curtainItemProvider = new CurtainItemProvider(this);
		}

		return curtainItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.Stowage} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StowageItemProvider stowageItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.Stowage}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStowageAdapter() {
		if (stowageItemProvider == null) {
			stowageItemProvider = new StowageItemProvider(this);
		}

		return stowageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.MainDoor} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MainDoorItemProvider mainDoorItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.MainDoor}. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMainDoorAdapter() {
		if (mainDoorItemProvider == null) {
			mainDoorItemProvider = new MainDoorItemProvider(this);
		}

		return mainDoorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.EmergencyExit} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EmergencyExitItemProvider emergencyExitItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.EmergencyExit}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEmergencyExitAdapter() {
		if (emergencyExitItemProvider == null) {
			emergencyExitItemProvider = new EmergencyExitItemProvider(this);
		}

		return emergencyExitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.StandardDoor} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StandardDoorItemProvider standardDoorItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.StandardDoor}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStandardDoorAdapter() {
		if (standardDoorItemProvider == null) {
			standardDoorItemProvider = new StandardDoorItemProvider(this);
		}

		return standardDoorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.SimulationProperties} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SimulationPropertiesItemProvider simulationPropertiesItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.SimulationProperties}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSimulationPropertiesAdapter() {
		if (simulationPropertiesItemProvider == null) {
			simulationPropertiesItemProvider = new SimulationPropertiesItemProvider(this);
		}

		return simulationPropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.SimulationResult} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SimulationResultItemProvider simulationResultItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.SimulationResult}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSimulationResultAdapter() {
		if (simulationResultItemProvider == null) {
			simulationResultItemProvider = new SimulationResultItemProvider(this);
		}

		return simulationResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link net.bhl.cdt.paxelerate.model.PhysicalObject} instances. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PhysicalObjectItemProvider physicalObjectItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link net.bhl.cdt.paxelerate.model.PhysicalObject}. <!-- begin-user-doc
	 * --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPhysicalObjectAdapter() {
		if (physicalObjectItemProvider == null) {
			physicalObjectItemProvider = new PhysicalObjectItemProvider(this);
		}

		return physicalObjectItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the
	 * adapter. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to
	 * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if (cabinItemProvider != null)
			cabinItemProvider.dispose();
		if (rowItemProvider != null)
			rowItemProvider.dispose();
		if (travelClassItemProvider != null)
			travelClassItemProvider.dispose();
		if (businessClassItemProvider != null)
			businessClassItemProvider.dispose();
		if (firstClassItemProvider != null)
			firstClassItemProvider.dispose();
		if (economyClassItemProvider != null)
			economyClassItemProvider.dispose();
		if (premiumEconomyClassItemProvider != null)
			premiumEconomyClassItemProvider.dispose();
		if (seatItemProvider != null)
			seatItemProvider.dispose();
		if (passengerItemProvider != null)
			passengerItemProvider.dispose();
		if (crewMemberItemProvider != null)
			crewMemberItemProvider.dispose();
		if (physicalObjectItemProvider != null)
			physicalObjectItemProvider.dispose();
		if (lavatoryItemProvider != null)
			lavatoryItemProvider.dispose();
		if (galleyItemProvider != null)
			galleyItemProvider.dispose();
		if (stairwayItemProvider != null)
			stairwayItemProvider.dispose();
		if (curtainItemProvider != null)
			curtainItemProvider.dispose();
		if (stowageItemProvider != null)
			stowageItemProvider.dispose();
		if (doorItemProvider != null)
			doorItemProvider.dispose();
		if (mainDoorItemProvider != null)
			mainDoorItemProvider.dispose();
		if (emergencyExitItemProvider != null)
			emergencyExitItemProvider.dispose();
		if (standardDoorItemProvider != null)
			standardDoorItemProvider.dispose();
		if (simulationPropertiesItemProvider != null)
			simulationPropertiesItemProvider.dispose();
		if (simulationResultItemProvider != null)
			simulationResultItemProvider.dispose();
	}

}
